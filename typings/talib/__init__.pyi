import numpy as np
from numpy.typing import NDArray

def MACD(real: NDArray[np.float64], fastperiod: int = 12, slowperiod: int = 26, signalperiod: int = 9) -> tuple[NDArray[np.float64], NDArray[np.float64], NDArray[np.float64]]: ...
def RSI(real: NDArray[np.float64], timeperiod: int = 14) -> NDArray[np.float64]: ...
def SMA(real: NDArray[np.float64], timeperiod: int = 30) -> NDArray[np.float64]: ...
def ATR(high: NDArray[np.float64], low: NDArray[np.float64], close: NDArray[np.float64], timeperiod: int = 14) -> NDArray[np.float64]: ...
def BBANDS(real: NDArray[np.float64], timeperiod: int = 5, nbdevup: float = 2, nbdevdn: float = 2, matype: int = 0) -> tuple[NDArray[np.float64], NDArray[np.float64], NDArray[np.float64]]: ...
def OBV(real: NDArray[np.float64], volume: NDArray[np.float64]) -> NDArray[np.float64]: ...
def CDLDOJI(open: NDArray[np.float64], high: NDArray[np.float64], low: NDArray[np.float64], close: NDArray[np.float64]) -> NDArray[np.intc]: ...
def CDLHAMMER(open: NDArray[np.float64], high: NDArray[np.float64], low: NDArray[np.float64], close: NDArray[np.float64]) -> NDArray[np.intc]: ...
def CDLSHOOTINGSTAR(open: NDArray[np.float64], high: NDArray[np.float64], low: NDArray[np.float64], close: NDArray[np.float64]) -> NDArray[np.intc]: ... 