"""
This type stub file was generated by pyright.
"""

from numba.cuda.cudadrv.error import CudaRuntimeError

"""
CUDA Runtime wrapper.

This provides a very minimal set of bindings, since the Runtime API is not
really used in Numba except for querying the Runtime version.
"""
class CudaRuntimeAPIError(CudaRuntimeError):
    """
    Raised when there is an error accessing a C API from the CUDA Runtime.
    """
    def __init__(self, code, msg) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class Runtime:
    """
    Runtime object that lazily binds runtime API functions.
    """
    def __init__(self) -> None:
        ...
    
    def __getattr__(self, fname): # -> _Wrapped[..., Any, ..., None]:
        ...
    
    def get_version(self): # -> tuple[int, int]:
        """
        Returns the CUDA Runtime version as a tuple (major, minor).
        """
        ...
    
    def is_supported_version(self): # -> bool:
        """
        Returns True if the CUDA Runtime is a supported version.
        """
        ...
    
    @property
    def supported_versions(self): # -> tuple[()] | tuple[tuple[int, int], tuple[int, int], tuple[int, int], tuple[int, int], tuple[int, int], tuple[int, int], tuple[int, int]]:
        """A tuple of all supported CUDA toolkit versions. Versions are given in
        the form ``(major_version, minor_version)``."""
        ...
    


runtime = ...
def get_version(): # -> tuple[int, int]:
    """
    Return the runtime version as a tuple of (major, minor)
    """
    ...

