"""
This type stub file was generated by pyright.
"""

import sys

"""Cudatoolkit libraries lookup utilities.

Cudatoolkit libraries can be available via either:

- the `cudatoolkit` conda package,
- a user supplied location from CUDA_HOME,
- a system wide location,
- package-specific locations (e.g. the Debian NVIDIA packages),
- or can be discovered by the system loader.
"""
if sys.platform == 'win32':
    _dllnamepattern = ...
    _staticnamepattern = ...
else:
    _dllnamepattern = ...
    _staticnamepattern = ...
    _dllnamepattern = ...
    _staticnamepattern = ...
def get_libdevice(): # -> Any:
    ...

def open_libdevice(): # -> bytes:
    ...

def get_cudalib(lib, platform=..., static=...): # -> Any | str:
    """
    Find the path of a CUDA library based on a search of known locations. If
    the search fails, return a generic filename for the library (e.g.
    'libnvvm.so' for 'nvvm') so that we may attempt to load it using the system
    loader's search mechanism.
    """
    ...

def open_cudalib(lib): # -> CDLL:
    ...

def check_static_lib(lib): # -> None:
    ...

def test(_platform=..., print_paths=...): # -> bool:
    """Test library lookup.  Path info is printed to stdout.
    """
    ...

